#!/usr/bin/bash -vx
#
# NENKAN_KEIKAKU.SEND.CGI
#
# 年間計画 取込 登録CGI
#
# 作成者: h-kato@usp-lab.com
# 作成日: 2022/07/25
#
##################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

##################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv1d=$homd/DATA/LV1
lv3d=$homd/DATA/LV3
tbld=$homd/TBL
sysd=$homd/SYS
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$$
sesd=$homd/SESSION

today=$(date +%Y%m%d)
todayhms=$(date +%Y%m%d%H%M%S)
##################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

##################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

##################################################
# セッション確認
echo $HTTP_COOKIE                                                  |
sed 's/; */\n/g'                                                   |
sed -n 's/=/ /p'                                                   |
cat                                                                > $tmp-cookie
ERROR_CHECK

session=$(nameread KEY $tmp-cookie)

check_session $session                                             > $tmp-session_check
ERROR_CHECK

# セッションがない場合、ログイン画面へ遷移
if [ ! -s $tmp-session_check ];then
        cat $comd/GOTOURL.HTML                                     |
        calsed "###URL###" "../../COMMON/CGI/LOGIN.CGI"            |
        cat                                                        > $tmp-html
ERROR_CHECK

        # HTML表示
        echo "Content-type:text/html"
        echo
        cat $tmp-html
ERROR_CHECK

        rm -rf $tmp-*
        exit 0
fi

# user情報
user=$(selr 1 "user" $sesd/SESSION.$session | self 2)
user_name=$(selr 1 "$user" $lv3d/TBL/USER_USERNAME | self 2)
user_permit=$(selr 1 "$user" $lv3d/USER_MASTER/USER_MASTER | self 5)

##################################################
# ユーザ権限チェック
if [ "$user_permit" == "01" ]; then
	:
else
	echo "Content-type:text/html"
	echo ""
	cat $comd/GOTOURL.HTML                          |
	calsed "###URL###" "../../COMMON/CGI/LOGIN.CGI" |
	cat
	rm -rf $tmp-*
	exit 0
fi


##################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"                       |
	cgi-name -n_ -s_                              |
	cat                                           > $tmp-name
ERROR_CHECK
else
	:                                             > $tmp-name
ERROR_CHECK
fi
##################################################

# エラーリストを作成
cat $tmp-name      |
nameread エラーNO  |
tr "," " "         |
tarr               |
#  1:エラーNO
msort key=1        |
cat                > $tmp-error_list
ERROR_CHECK

# 登録処理
# 取得情報整形
cat $tmp-name                                        |
name-tag                                             |
tagself 会社 会計年度 店舗コード 売上高 営業利益     \
        削除 NO                                      |
#  1:会社 2:会計年度 3:店舗コード 4:売上高 5:営業利益
#  6:削除 7:NO      
# 必須項目(会社)がないものは排除
delr 1 "_"                                           |
# ヘッダー排除
sed 1d                                               |
# 店舗名を連結
self 0 1 3 |
cjoin2 key=NF-1/NF $lv3d/TBL/KAISHA_TENPOCO_NAME     |
self 1 2 10 3/7                                      |
#  1:会社     2:会計年度 3:店舗名 4:店舗コード 5:売上高
#  6:営業利益 7:削除     8:NO    
# 区分を追加
strcat 1/2 '"計画"' 3/NF                             |
#  1:会社   2:会計年度 3:計画 4:店舗名 5:店舗コード
#  6:売上高 7:営業利益 8:削除 9:NO    
# 登録時エラーがあるものは除去
cjoin1 +ng3 key=NF $tmp-error_list 3>&1 1>/dev/null  |
delf NF                                              |
# 削除の場合はフラグを1へ
fsed 's/true/1/8' 's/false/0/8'                      |
msort key=1/NF                                       |
# 売上高と営業利益のカンマを消す
fsed 's/,//6' 's/,//7'                               |
# 登録済み情報との差分のみ取得
cjoin1 +ng2 key=1/8 $lv3d/NENKAN_KEIKAKU/NENKAN_KEIKAKU 1> /dev/null 2> $tmp-send_data
ERROR_CHECK

# 登録差分が存在する場合
if [ -s $tmp-send_data ];then
  #  1:会社   2:会計年度 3:区分 4:店舗名   5:店舗コード
  #  6:売上高 7:営業利益 8:削除
  # 登録情報の作成
	cat $tmp-send_data      |
  strcat 0 \"$todayhms\"  |
  #  1:会社   2:会計年度 3:区分 4:店舗名   5:店舗コード
  #  6:売上高 7:営業利益 8:削除 9:更新日時
  tee /tmp/lv1            |
  cat                     > $tmp-lv1
ERROR_CHECK

	# LV1ディレクトリ作成
	mkdir -p $lv1d/NENKAN_KEIKAKU/"$today"
ERROR_CHECK

	# LV1へ保存
	mv $tmp-lv1 $lv1d/NENKAN_KEIKAKU/"$today"/NENKAN_KEIKAKU_"$todayhms"_$$
ERROR_CHECK

	# 整理バッチ
	$sysd/DATAMASTER.NENKAN_KEIKAKU $today 1> /dev/null 2> /dev/null
ERROR_CHECK
else
	:
fi

# 送信情報作成
if [ $(cat $tmp-error_list) == "_" ]; then
	echo -n "no_error"
else
	echo -n "exist_error"
fi                       > $tmp-ajax

##################################################
# 作成情報送信
echo "Content-type:text/html"
echo
cat $tmp-ajax

#################################################
# 終了処理
rm -rf $tmp-*
exit 0
