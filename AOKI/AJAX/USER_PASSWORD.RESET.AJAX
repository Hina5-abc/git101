#!/usr/bin/bash -vx
#
# USER_PASSWORD.RESET.AJAX
#
# ユーザパスワードのリセット AJAX
#
# 作成者: h-kato@usp-lab.com
# 作成日: 2022/10/19
#
##################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

##################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv1d=$homd/DATA/LV1
lv3d=$homd/DATA/LV3
tbld=$homd/TBL
sysd=$homd/SYS
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$$

today=$(date +%Y%m%d)
todayhms=$(date +%Y%m%d%H%M%S)
##################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

##################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}


##################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"                       |
	cgi-name -n_ -s_                              |
	cat                                           > $tmp-name
ERROR_CHECK
else
	:                                             > $tmp-name
ERROR_CHECK
fi

user_id=$(nameread ユーザーID $tmp-name)

##################################################
# ログイン試行回数リセット
echo "0" > $tbld/GETNO/USER_LOGIN/$user_id
ERROR_CHECK

# パスワードリセット
#  1:ユーザーID 2:ユーザー名称 3:パスワード(ハッシュ値) 4:会社名 5:ロールNO
#  6:削除F      7:更新日時    
cat $lv3d/USER_MASTER/USER_MASTER |
delr 1 NF-1                       |
selr 1 "$user_id"                 |
# パスワードを初期化し、更新日時を更新
strcat 1 2 '"_"' 4/6 \"$todayhms\" |
cat > $tmp-lv1
ERROR_CHECK

# LV1ディレクトリ作成
mkdir -p $lv1d/USER_MASTER/"$today"
ERROR_CHECK

# LV1へ保存
mv $tmp-lv1 $lv1d/USER_MASTER/"$today"/USER_MASTER_"$todayhms"_$$
ERROR_CHECK

# 整理バッチ
$sysd/DATAMASTER.USER_MASTER $today 1> /dev/null 2> /dev/null
ERROR_CHECK

##################################################
# 作成情報送信
echo "Content-type:text/html"
echo
echo -n "ok"

#################################################
# 終了処理
rm -rf $tmp-*
exit 0
