#!/usr/bin/bash -vx
#
# USER_MASTER.SEND.AJAX
#
# ユーザーマスター 登録AJAX
#
# 作成者: h-kato@usp-lab.com
# 作成日: 2022/10/17
#
##################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

##################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv1d=$homd/DATA/LV1
lv3d=$homd/DATA/LV3
tbld=$homd/TBL
sysd=$homd/SYS
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$$

today=$(date +%Y%m%d)
todayhms=$(date +%Y%m%d%H%M%S)
##################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

##################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}


##################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"                       |
	cgi-name -n_ -s_                              |
	cat                                           > $tmp-name
ERROR_CHECK
else
	:                                             > $tmp-name
ERROR_CHECK
fi

##################################################
# 登録処理

# LV3ユーザーマスタから情報を取得
#  1:ユーザーID 2:ユーザー名称 3:パスワード(ハッシュ値) 4:会社名 5:ロールNO
#  6:削除F      7:更新日時    
cat $lv3d/USER_MASTER/USER_MASTER  |
strcat 1 2 '"_"' 4/7               |
cat                                > $tmp-lv3
ERROR_CHECK

# 取得情報整形
cat $tmp-name                                           |
name-tag                                                |
tagself ユーザーID ユーザー名 会社 ロールID 削除        |
#  1:ユーザーID 2:ユーザー名 3:会社 4:ロールID 5:削除
# 必須項目(ユーザーID)がないものは排除
delr 1 "_"                                              |
# ヘッダー排除
sed 1d                                                  |
# ユーザーID、ロールIDに前ゼロ付与
maezero 1.6 4.2                                         |
# 試行回数、パスワード、更新日時を付与
strcat 1 2 '"_"' 3 4                                    \
       5 '"'$todayhms'"'                                |
#  1:ユーザーID 2:ユーザー名称 3:パスワード(ハッシュ値) 4:会社名 5:ロールNO
#  6:削除F      7:更新日時    
# 削除の場合はフラグを1へ
fsed 's/true/1/6' 's/false/0/6'                         |
msort key=1/NF                                          |
# 登録済み情報との差分のみ取得
cjoin1 +ng3 key=1/6 $tmp-lv3 1> /dev/null 3> $tmp-send_data
ERROR_CHECK

# 登録差分が存在する場合
if [ -s $tmp-send_data ];then
	# 登録情報の作成
	#  1:ユーザーID 2:ユーザー名称 3:パスワード(ハッシュ値) 4:会社名 5:ロールNO
	#  6:削除F      7:更新日時    
  cat $tmp-send_data  |
  cat                 > $tmp-lv1
ERROR_CHECK

 	# LV1ディレクトリ作成
 	mkdir -p $lv1d/USER_MASTER/"$today"
 ERROR_CHECK
 
 	# LV1へ保存
 	mv $tmp-lv1 $lv1d/USER_MASTER/"$today"/USER_MASTER_"$todayhms"_$$
 ERROR_CHECK
 
 	# 整理バッチ
 	$sysd/DATAMASTER.USER_MASTER $today 1> /dev/null 2> /dev/null
 ERROR_CHECK
else
	:
fi

##################################################
# 作成情報送信
echo "Content-type:text/html"
echo
echo -n "ok"

#################################################
# 終了処理
rm -rf $tmp-*
exit 0
