#!/usr/bin/bash -vx
############################################################
#
# SHIKIHO.SEND.AJAX
#
# 敷金保険料建設協力金 登録AJAX
#
# 作成者: t-kaida@usp-lab.com
# 作成日: 2022/10/18
#
############################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

############################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv1d=$homd/DATA/LV1
lv3d=$homd/DATA/LV3
tbld=$homd/TBL
sysd=$homd/SYS
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$(basename $0).$(date +'%Y%m%d_%H%M%S').$$

today=$(date +%Y%m%d)
todayhms=$(date +%Y%m%d%H%M%S)

############################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

############################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

############################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
        dd bs="$CONTENT_LENGTH"                                          |
        cgi-name -n_ -s_                                                 |
        cat                                                              > $tmp-name
ERROR_CHECK
else
        :                                                                > $tmp-name
ERROR_CHECK
fi

############################################################

# エラーリストを作成
cat $tmp-name      |
nameread エラーNO  |
tr "," " "         |
tarr               |
#  1:エラーNO
msort key=1        |
cat                > $tmp-error_list
ERROR_CHECK

#----------------------------------------
# 登録済みの敷金補償金建設協力金の取得（差分取得用）
#----------------------------------------
cat $lv3d/SHIKIHO/SHIKIHO |
delf 1 										| # IDは差分対象外
msort key=1/20						|					
cat                       > $tmp-shikiho_lv3
ERROR_CHECK

#----------------------------------------
# 登録処理
#----------------------------------------
cat $tmp-name                                                            | # 取得情報整形
name-tag                                                                 |
tagself ID 会社 店舗コード 管理番号 契約先															 \
				契約名称 敷金保証金区分 建設協力金番号 枝番 金額								 \
				返済条件 返済開始月 返済終了月 償還条件 償還初回方法						 \
				償還初回償還額 償還定期方法 償還定期償還額 償還最終方法 償還最終償還額 \
				削除 NO																													 |
#
#  1:ID          2:会社             3:店舗コード       4:管理番号  5:契約先
#  6:契約名称    7:敷金保証金区分   8:建設協力金番号   9:枝番      10:金額_円
#  11:返済条件   12:返済期間_開始日 13:返済期間_終了日 14:償還条件 15:初回方法
#  16:初回償還額 17:定期方法        18:定期償還額      19:最終方法 20:最終償還額
#  21:削除       22:NO

sed 1d                                                                   | # ヘッダー排除
delr 2 "_"																															 |

cjoin1 +ng3 key=NF $tmp-error_list 3>&1 1>/dev/null                      | # 登録時エラーがあるNOのものは除去
delf NF                                                                  | # NOを削除

dayslash --input yyyy/mm 12                                              | # 日付整形
dayslash --input yyyy/mm 13                                              | # 日付整形
maezero 9.2																															 | # 枝番に前ゼロ
fsed 's/,//10' 's/,//16' 's/,//18' 's/,//20'                             | # 数値部分、カンマ排除
fsed 's/_/0/10' 's/_/0/16' 's/_/0/18' 's/_/0/20'                         | # 数値部分、ブランクは 0 に
fsed 's/_/209912/12' 's/_/209912/13'                          					 | # 年月部分、ブランクは 209912 に
fsed 's/true/1/21' 's/false/0/21'                                        | # 削除の場合はフラグを1へ

# 登録済み情報との差分のみ取得
cjoin1 +ng2 key=2/21 $tmp-shikiho_lv3 1> /dev/null 2> $tmp-send_data
ERROR_CHECK

# 登録情報が存在する場合、登録処理
if [ -s $tmp-send_data ];then
      cat $tmp-send_data                                                 |

			# IDがないものは採番
      selr 1 "_"                                                         |
      cat                                                                > $tmp-id_mitouroku
			ERROR_CHECK

      if [ -s $tmp-id_mitouroku ];then
      		gyosu=$(gyo $tmp-id_mitouroku)
          getno $gyosu $tbld/GETNO/SHIKIHO                               | # ID採番
          ycat - $tmp-id_mitouroku                                       |
        	delf 2                                                         |
          cat                                                            > $tmp-shinki
					ERROR_CHECK
      else
                :                                                        > $tmp-shinki
      fi
        
			# 登録情報の作成
      cat $tmp-send_data																								 |
      delr 1 "_"                                                         |
      ucat - $tmp-shinki                                                 |
			fsed 's/_/209912/12' 's/_/209912/13'            									 | # 契約中、且つ、空白の場合は2099/12をセット
			msort key=1                                                        |
      strcat 0 \"$todayhms\"                                           	 | # 更新日時の付与
      #
			#  1:ID          2:会社             3:店舗コード       4:管理番号  5:契約先
			#  6:契約名称    7:敷金保証金区分   8:建設協力金番号   9:番号      10:金額_円
			#  11:返済条件   12:返済期間_開始日 13:返済期間_終了日 14:償還条件 15:初回方法
			#  16:初回償還額 17:定期方法        18:定期償還額      19:最終方法 20:最終償還額
			#  21:削除       22:更新日時
      cat                                                                > $tmp-lv1
      ERROR_CHECK

      # ディレクトリ作成
      mkdir -p $lv1d/SHIKIHO/$today
			ERROR_CHECK

      # LV1へ登録
      mv $tmp-lv1 $lv1d/SHIKIHO/$today/SHIKIHO_"$todayhms"_$$
			ERROR_CHECK

      # 整理バッチ
      $sysd/DATAMASTER.SHIKIHO $today 1> /dev/null 2> /dev/null
			ERROR_CHECK
else
        :
fi

##################################################
# 作成情報送信
echo "Content-type:text/html"
echo
echo -n "ok"

#################################################
# 終了処理
rm -rf $tmp-*
exit 0

