#!/usr/bin/bash -vx
#
# USER_MASTER.CHECK.AJAX
#
# ユーザーマスター 入力値チェック AJAX
#
# 作成者: h-kato@usp-lab.com
# 作成日: 2022/08/19
#
##################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

##################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv3d=$homd/DATA/LV3
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$$

##################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

##################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

##################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"                       |
	cgi-name -n_ -s_                              |
	cat                                           > $tmp-name
ERROR_CHECK
else
	:                                             > $tmp-name
ERROR_CHECK
fi

##################################################
# 入力有無チェックファイル作成
echo "_"  |
ransu 5   |
yarr      |
cat       > $tmp-check_file
ERROR_CHECK

# nameファイル整形
# レコードに一つも入力がない場合は排除
cat $tmp-name                                         |
fsed 's/_/ /1'                                        |
uawk 'NF=="3"'                                        |
msort key=1                                           |
map num=1                                             |
delr 1 "削除"                                         |
delr 1 "NO"                                           |
tateyoko                                              |
#  タグ形式
#  1:レコードNO 2:ユーザーID 3:ユーザー名 4:ロールID 5:ロール名
#  6:会社      
delr 1 "999999"                                       |
cjoin0 +ng3 key=2/NF $tmp-check_file 3>&1 >/dev/null  |
# マスター存在チェックのため一時ファイル出力
tee $tmp-check_master                                 |
unmap num=1                                           |
strcat 2+\"_\"+1 3                                    |
cat                                                   > $tmp-check_name
ERROR_CHECK

# エラーファイルの初期化
:                                                     > $tmp-error

# 必須項目のチェック
self 1/NF <<- FIN > $tmp-need
ユーザーID
ユーザー名
ロールID
ロール名
会社
FIN

cat $tmp-check_name > /tmp/name

check_need_name $tmp-need $tmp-check_name  > $tmp-need_error
if [ $? -ne 0 ];then
        cat $tmp-need_error                |
        strcat 1 \"必須項目です\"          |
        cat                               >> $tmp-error
fi

# 数値チェック
self 1/NF <<- FIN > $tmp-attr
ユーザーID n6
ロールID   n2
FIN

# チェック処理
check_attr_name $tmp-attr $tmp-check_name > $tmp-attr_error

if [ $? -ne 0 ];then
        cat $tmp-attr_error                                              |
        strcat 1 \"整数を決められた桁数で入力してください\"              |
        cat                                                             >> $tmp-error
ERROR_CHECK
fi

# 会社の存在チェック
cat $tmp-check_name                                      |
nameread -le '会社'                                      |
#  1:name 2:value
fsed 's/_/ /1'                                           |
self 2 3                                                 |
#  1:NO 2:会社
cjoin1 +ng2 key=2 $lv3d/TBL/KAISHA_NAME 2>&1 >/dev/null  |
strcat \"会社_\"+1 \"マスタに存在しません\"              |
cat                                                     >> $tmp-error
ERROR_CHECK

# ロールIDの存在チェック
cat $tmp-check_name                                    |
nameread -le 'ロールID'                                |
#  1:name 2:value
fsed 's/_/ /1'                                         |
self 2 3                                               |
#  1:NO 2:ロールID
cjoin1 +ng2 key=2 $lv3d/TBL/ROLE_NAME 2>&1 >/dev/null  |
strcat \"ロールID_\"+1 \"マスタに存在しません\"        |
cat                                                   >> $tmp-error

# ユーザーID重複チェック
cat $tmp-check_name                                      |
nameread -le 'ユーザーID'                                |
#  1:name 2:value
fsed 's/_/ /1'                                           |
self 3 2                                                 |
#  1:ユーザーID 2:NO
msort key=1/2                                            |
yarr num=1                                               |
# ユーザーIDが重複しているものを抽出
uawk 'NF != 2'                                           |
tarr num=1                                               |
#  1:ユーザーID 2:NO
strcat \"ユーザーID_\"+2 \"ユーザーIDが重複しています\"  |
cat                                                     >> $tmp-error
ERROR_CHECK

if [ -s $tmp-error ];then
	cat $tmp-error                                |
	cat                                           > $tmp-ajax
ERROR_CHECK
else
	echo -n "ok"                                  > $tmp-ajax
ERROR_CHECK
fi
##################################################
# 情報送信
echo "Content-type:text/html"
echo
cat $tmp-ajax

#################################################
# 終了処理
rm -rf $tmp-*
exit 0
