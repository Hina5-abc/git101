#!/usr/bin/bash -vx
#
# KEIYAKU_KOSHIN.SEND.AJAX
#
# 契約管理更新入力 登録AJAX
#
# 作成者: t-kaida@usp-lab.com
# 作成日: 2022/12/13
#
############################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

############################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv1d=$homd/DATA/LV1
lv3d=$homd/DATA/LV3
tbld=$homd/TBL
sysd=$homd/SYS
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$(basename $0).$(date +'%Y%m%d_%H%M%S').$$

today=$(date +%Y%m%d)
todayhms=$(date +%Y%m%d%H%M%S)

############################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

############################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

############################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
        dd bs="$CONTENT_LENGTH"	|
        cgi-name -n_ -s_        |
        cat                     > $tmp-name
        ERROR_CHECK
else
        :                       > $tmp-name
        ERROR_CHECK
fi

############################################################

#*******************************************************************************
# 契約管理情報の取得
#*******************************************************************************
# 登録処理
# 取得情報整形
cat $tmp-name                                                   																|
name-tag                                                        																|
tagself 会社検索 店舗コード検索開始 管理番号検索 契約種類 契約名称		    											\
				契約住所 契約日 開店日 基本契約開始 基本契約終了																				\
				更新契約開始 更新契約終了 次回改定日 改定条件 更新条件																	\
				更新予告 更新手数料 自動更新 解約予告 中途解約条件																			\
				明渡条件 契約敷地面積 契約延床面積 摘要 契約先名																				\
				契約先CD 親オーナーコード 親オーナー枝番 子オーナーコード2 子オーナー枝番2							\
				子オーナー解約2 子オーナーコード3 子オーナー枝番3 子オーナー解約3 子オーナーコード4			\
			  子オーナー枝番4 子オーナー解約4 子オーナーコード5	子オーナー枝番5 子オーナー解約5				\
        子オーナーコード6 子オーナー枝番6 子オーナー解約6 子オーナーコード7 子オーナー枝番7			\
        子オーナー解約7 子オーナーコード8 子オーナー枝番8 子オーナー解約8 子オーナーコード9			\
				子オーナー枝番9 子オーナー解約9 子オーナーコード10 子オーナー枝番10 子オーナー解約10		\
        子オーナーコード11 子オーナー枝番11	子オーナー解約11 担当者															|
#
#  1:会社検索            2:店舗コード検索開始 3:管理番号検索        4:契約種類           5:契約名称
#  6:契約住所            7:契約日             8:開店日              9:基本契約開始       10:基本契約終了
#  11:更新契約開始       12:更新契約終了      13:次回改定日         14:改定条件          15:更新条件
#  16:更新予告           17:更新手数料        18:自動更新           19:解約予告          20:中途解約条件
#  21:明渡条件           22:契約敷地面積      23:契約延床面積       24:摘要              25:契約先名
#  26:契約先CD           27:親オーナーコード  28:親オーナー枝番     29:子オーナーコード2 30:子オーナー枝番2
#  31:子オーナー解約2    32:子オーナーコード3 33:子オーナー枝番3    34:子オーナー解約3   35:子オーナーコード4
#  36:子オーナー枝番4    37:子オーナー解約4   38:子オーナーコード5  39:子オーナー枝番5   40:子オーナー解約5
#  41:子オーナーコード6  42:子オーナー枝番6   43:子オーナー解約6    44:子オーナーコード7 45:子オーナー枝番7
#  46:子オーナー解約7    47:子オーナーコード8 48:子オーナー枝番8    49:子オーナー解約8   50:子オーナーコード9
#  51:子オーナー枝番9    52:子オーナー解約9   53:子オーナーコード10 54:子オーナー枝番10  55:子オーナー解約10
#  56:子オーナーコード11 57:子オーナー枝番11  58:子オーナー解約11   59:担当者

delr 2 "_"i																		| # 必須項目、会社がないものは排除
sed 1d                                        | # ヘッダー排除
atama 1																				| # 契約管理情報は1件
dayslash --input yyyy-mm-dd 7 8 9 10 11 12 13 | # 日付を yyyy/mm/dd から yyyymmdd へ
fsed 's/,//22' 's/,//23'         							| # 数値部分、カンマ排除

uawk '{$29=="_"?$31="_":$31=="解約"?$31="007":$31="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$32=="_"?$34="_":$34=="解約"?$34="007":$34="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$35=="_"?$37="_":$37=="解約"?$37="007":$37="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$38=="_"?$40="_":$40=="解約"?$40="007":$40="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$41=="_"?$43="_":$43=="解約"?$43="007":$43="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$44=="_"?$46="_":$46=="解約"?$46="007":$46="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$47=="_"?$49="_":$49=="解約"?$49="007":$49="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$50=="_"?$52="_":$52=="解約"?$52="007":$52="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$53=="_"?$55="_":$55=="解約"?$55="007":$55="002";print}'	| # 解約Fが"解約"の場合は"007"に
uawk '{$56=="_"?$58="_":$58=="解約"?$58="007":$58="002";print}'	| # 解約Fが"解約"の場合は"007"に

tee $tmp-keiyaku_tagself_org							    | # 更新有無チェック用を作成する前にオリジナルを保存
#delf 8 11 26																  | # 自動取得の 8:開店日 11:更新契約開始 26:契約先CDは削除
delf 11 26																    | # 自動取得の 11:更新契約開始 26:契約先CDは削除
cat - 																				> $tmp-keiyaku_koshin_koho

cat $tmp-keiyaku_koshin_koho	|
self 1 2 3										|
cat - 												> $tmp-keiyaku_koshin_key

cat $lv3d/KEIYAKU/KEIYAKU									|
cjoin0 key=2/4 $tmp-keiyaku_koshin_key -	| 
atama 1																	 	| # 念のため。会社、店舗コード、管理番号でユニークなはず 
tee $tmp-keiyaku_org											| # 更新有無チェック用を作成する前にオリジナルを保存
self	2  3  4  14 12											\
			34 17 16 18 19 20 											\
			21 22 23 24 25											\
			26 27 28 29 30											\
			32 36 10 8	 9											\
      39 40 41 42 43 											\
			44 45 46 47 48 											\
			49 50 51 52 53 											\
			54 55 56 57 58 											\
			59 60 61 62 63 											\
      64 65 66 67 68 7										|
msort key=1/57														|			
			
# 契約管理情報の更新有無を確認
cjoin1 +ng2 key=1/57 - $tmp-keiyaku_koshin_koho 1> /dev/null 2> $tmp-keiyaku_koshin_data
ERROR_CHECK

#----------------------------------------
# 契約情報＋オーナー情報
#----------------------------------------
# 契約管理情報の更新が存在する場合
if [ -s $tmp-keiyaku_koshin_data ];then
		ycat $tmp-keiyaku_org $tmp-keiyaku_tagself_org	|
		#
		#  1:ID                2:会社              3:店舗コード         4:管理番号          5:業態
		#  6:使用状態          7:担当者            8:オーナーCD         9:オーナーCD_枝番   10:契約先
		#  11:個人法人区分     12:契約名称         13:賃貸借関係        14:契約種類         15:物件名
		#  16:OPEN日           17:契約日           18:契約期間開始日    19:原契約期間満了日 20:契約期間満了日
		#  21:次回改定日       22:改定条件         23:更新条件          24:更新予告         25:更新手数料
		#  26:自動更新         27:解約予告         28:解約条件          29:明渡条件         30:契約敷地面積
		#  31:契約敷地合計     32:契約延床面積     33:契約先コード      34:契約住所         35:都道府県名
		#  36:摘要             37:交渉履歴         38:主キー項目        39:オーナーCD2      40:オーナーCD枝番2
		#  41:オーナーCD2解約F 42:オーナーCD3      43:オーナーCD枝番3   44:オーナーCD3解約F 45:オーナーCD4
		#  46:オーナーCD枝番4  47:オーナーCD4解約F 48:オーナーCD5       49:オーナーCD枝番5  50:オーナーCD5解約F
		#  51:オーナーCD6      52:オーナーCD枝番6  53:オーナーCD6解約F  54:オーナーCD7      55:オーナーCD枝番7
		#  56:オーナーCD7解約F 57:オーナーCD8      58:オーナーCD枝番8   59:オーナーCD8解約F 60:オーナーCD9
		#  61:オーナーCD枝番9  62:オーナーCD9解約F 63:オーナーCD10      64:オーナーCD枝番10 65:オーナーCD10解約F
		#  66:オーナーCD11     67:オーナーCD枝番11 68:オーナーCD11解約F 69:削除F            70:更新日時
		#
		# （+70）
		#  1:会社検索            2:店舗コード検索開始 3:管理番号検索        4:契約種類           5:契約名称
		#  6:契約住所            7:契約日             8:開店日              9:基本契約開始       10:基本契約終了
		#  11:更新契約開始       12:更新契約終了      13:次回改定日         14:改定条件          15:更新条件
		#  16:更新予告           17:更新手数料        18:自動更新           19:解約予告          20:中途解約条件
		#  21:明渡条件           22:契約敷地面積      23:契約延床面積       24:摘要              25:契約先名
		#  26:契約先CD           27:親オーナーコード  28:親オーナー枝番     29:子オーナーコード2 30:子オーナー枝番2
		#  31:子オーナー解約2    32:子オーナーコード3 33:子オーナー枝番3    34:子オーナー解約3   35:子オーナーコード4
		#  36:子オーナー枝番4    37:子オーナー解約4   38:子オーナーコード5  39:子オーナー枝番5   40:子オーナー解約5
		#  41:子オーナーコード6  42:子オーナー枝番6   43:子オーナー解約6    44:子オーナーコード7 45:子オーナー枝番7
		#  46:子オーナー解約7    47:子オーナーコード8 48:子オーナー枝番8    49:子オーナー解約8   50:子オーナーコード9
		#  51:子オーナー枝番9    52:子オーナー解約9   53:子オーナーコード10 54:子オーナー枝番10  55:子オーナー解約10
		#  56:子オーナーコード11 57:子オーナー枝番11  58:子オーナー解約11   59:担当者

		self	1   2   3   4   5		\
					6   129 97  98  95	\
					11  75  13  74  15	\
					78  77  79  80  82	\
					83  84  85  86  87	\
					88  89  90  91  92	\
					31  93  33  76  35	\
					94  37  38  99  100	\
					101 102 103	104 105	\
					106 107 108 109 110	\
					111 112 113 114 115	\
					116 117 118 119 120	\
					121 122 123 124 125	\
					126 127 128					|
		fpad "_" 69								| # 削除Fに"_"をパディング
    strcat 0 \"$todayhms\" 		| # 更新日時の付与
		cat -											> $tmp-lv1_keiyaku_koshin
fi

#*******************************************************************************
# 賃料改定情報の取得
#*******************************************************************************
echo _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 										|
cat - 																										> $tmp-chinryo_henkonashi
ERROR_CHECK

# 必須項目、会社がないものは排除
# 登録処理
# 取得情報整形
cat $tmp-name                                             				|
name-tag                                                  				|
tagself 会社検索 店舗コード検索開始 管理番号検索 更新日 契約先名  \
        契約名称 賃料 管理費 駐車料 その他                				\
        消費税 消費税区分2 相殺額 月額支払額 改定内容     				\
        支払方法2 歩合                                    				|
#
#  1:会社      2:店舗コード  3:管理番号  4:更新日      5:契約先   
#  6:契約種類  7:賃料        8:管理費    9:駐車料      10:その他  
#  11:消費税   12:消費税区分 13:相殺額   14:月額支払額 15:改定内容
#  16:支払方法 17:歩合

delr 4 "_"                    | # 更新日がないものは排除
sed 1d                        | # ヘッダー排除
atama 1											  | # 賃料改定は追加1行
fpad "_" 18										| # 削除Fに"_"をパディング
dayslash --input yyyy/mm/dd 4	| # 日付整形
fsed 's/,//7' 's/,//8' 's/,//9' 's/,//10' 's/,//11' 's/,//13' 's/,//14'  | # 数値部分のカンマ排除
fsed 's/_/0/7' 's/_/0/8' 's/_/0/9' 's/_/0/10' 's/_/0/11' 's/_/0/13' 's/_/0/14'  | # 数値部分、ブランクは 0 に
fsed 's/true/1/18' 's/false/0/18'                                        | # 削除の場合はフラグを1に

# 登録済み情報との差分のみ取得
cjoin1 +ng2 key=1/17 $tmp-chinryo_henkonashi 1> /dev/null 2> $tmp-chinryo_kaite_send_data
ERROR_CHECK

# 登録情報が存在する場合、登録処理
if [ -s $tmp-chinryo_kaite_send_data ];then
      cat $tmp-chinryo_kaite_send_data	|
      #
      #  1:会社      2:店舗コード  3:管理番号  4:更新日      5:契約先   
			#  6:契約種類  7:賃料        8:管理費    9:駐車料      10:その他  
			#  11:消費税   12:消費税区分 13:相殺額   14:月額支払額 15:改定内容
			#	16:支払方法  17:歩合       18:削除F

      strcat 0 \"$todayhms\"  					| # 更新日時の付与
      #
      #  1:会社      2:店舗コード  3:管理番号  4:更新日      5:契約先   
			#  6:契約種類  7:賃料        8:管理費    9:駐車料      10:その他  
			#  11:消費税   12:消費税区分 13:相殺額   14:月額支払額 15:改定内容
			#	16:支払方法  17:歩合       18:削除F    19:更新日時
      cat                     					> $tmp-lv1_chinryo_kaite
      ERROR_CHECK
fi

#*******************************************************************************
# データ反映
#*******************************************************************************

# 契約管理情報の反映
if [ -s $tmp-lv1_keiyaku_koshin ];then
		# LV1ディレクトリ作成
		mkdir -p $lv1d/KEIYAKU/"$today"
		ERROR_CHECK

		# LV1へ保存
		mv $tmp-lv1_keiyaku_koshin $lv1d/KEIYAKU/"$today"/KEIYAKU_"$todayhms"_$$
		ERROR_CHECK

		# 整理バッチ
		$sysd/DATAMASTER.KEIYAKU $today 1> /dev/null 2> /dev/null
		ERROR_CHECK
fi

# 賃料改定情報の反映
if [ -s $tmp-lv1_chinryo_kaite ];then
      # ディレクトリ作成
      mkdir -p $lv1d/CHINRYOKAITE/$today
		  ERROR_CHECK

      # LV1へ登録
      mv $tmp-lv1_chinryo_kaite $lv1d/CHINRYOKAITE/$today/CHINRYOKAITE_"$todayhms"_$$
	  	ERROR_CHECK

      # 整理バッチ
      $sysd/DATAMASTER.CHINRYOKAITE $today 1> /dev/null 2> /dev/null
  		ERROR_CHECK
fi

############################################################
# 作成情報送信
echo "Content-type:text/html"
echo
echo -n "ok"

############################################################
# 終了処理
rm -rf $tmp-*
exit 0

