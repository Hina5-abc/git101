#!/usr/bin/bash -vx
######################################################################
#
# KEIYAKU_IKKATSUFUKUSEI.CHECK.AJAX
#
# 契約一括複製 チェック AJAX
#
# 作成者: t-kaida@usp-lab.com
# 作成日: 2022/11/07
#
######################################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

######################################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv3d=$homd/DATA/LV3
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$(basename $0).$(date +'%Y%m%d_%H%M%S').$$

######################################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

######################################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

######################################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"             |
	cgi-name -n_ -s_                    |
	cat                                 > $tmp-name
ERROR_CHECK
else
	:                                   > $tmp-name
ERROR_CHECK
fi

######################################################################
#----------------------------------------
# エラーファイルの初期化
#----------------------------------------
:                                                                          > $tmp-error

#----------------------------------------
# 必須項目チェック
#----------------------------------------
self 1/NF <<- FIN                                                          > $tmp-need
旧店舗コード検索
旧契約コード番号検索
旧オーナーコード検索
新店舗コード検索
新契約コード番号検索
新オーナーコード検索
FIN

check_need_name $tmp-need $tmp-name                                  > $tmp-need_error
if [ $? -ne 0 ];then
        cat $tmp-need_error                                                |
        strcat 1 \"必須項目です\"                                          |
        cat                                                               >> $tmp-error
				ERROR_CHECK
fi

#----------------------------------------
# 新旧のキー項目の重複存在チェック
#----------------------------------------
cat $tmp-name                              		|
nameread -le '旧会社検索|新会社検索|旧店舗コード検索|新店舗コード検索|旧契約コード番号検索|新契約コード番号検索'  |
yarr																					|
#
#  1:旧会社検索            2:旧会社検索の値   3:新会社検索           4:新会社検索の値       5:旧店舗コード検索
#  6:旧店舗コード検索の値  7:新店舗コード検索 8:新店舗コード検索の値 9:旧契約コード番号検索 10:旧契約コード番号検索の値
#  11:新契約コード番号検索 12:新契約コード番号検索の値

tee $tmp-name2																|
uawk '{
	if($2==$4&&$6==$8&&$10==$12){
		print "[会社＋店舗コード＋契約番号]が新・旧で重複しています"
	}
}'																						|
cat - 																			 >> $tmp-error
ERROR_CHECK

#----------------------------------------
# 新キー項目の存在チェック
#----------------------------------------
cat $tmp-name2																|
#
#  1:旧会社検索            2:旧会社検索の値   3:新会社検索           4:新会社検索の値       5:旧店舗コード検索
#  6:旧店舗コード検索の値  7:新店舗コード検索 8:新店舗コード検索の値 9:旧契約コード番号検索 10:旧契約コード番号検索の値
#  11:新契約コード番号検索 12:新契約コード番号検索の値

self 4 8 12																		|
#  1:新会社検索の値 2:新店舗コード検索の値 3::新契約コード番号検索の値
cjoin0 key=2/4 - <(cat $lv3d/KEIYAKU/KEIYAKU) - | # 重複チェック
strcat \"入力された新契約番号は既に存在しています\"	|
cat                                          >> $tmp-error
ERROR_CHECK

# 送信ファイルの作成
if [ -s $tmp-error ];then
        cat $tmp-error                                                     > $tmp-ajax
				ERROR_CHECK
else
        echo -n "ok"                                                       > $tmp-ajax
				ERROR_CHECK
fi
######################################################################
# 情報送信
echo "Content-type:text/html"
echo
cat $tmp-ajax

######################################################################
# 終了処理
rm -rf $tmp-*
exit 0

