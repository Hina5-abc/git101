#!/usr/bin/bash -vx
#
# TENPO_MASTER.CHECK.AJAX
#
# 店舗マスタ 入力値チェック AJAX
#
# 作成者: k-tanaka@usp-lab.com
# 作成日: 2022/07/13
#
##################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

##################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv3d=$homd/DATA/LV3
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$$

##################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

##################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

##################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"                       |
	cgi-name -n_ -s_                              |
	cat                                           > $tmp-name
ERROR_CHECK
else
	:                                             > $tmp-name
ERROR_CHECK
fi

##################################################
# 入力有無チェックファイル作成
echo "_"                                              |
ransu 29                                              |
yarr                                                  |
cat                                                   > $tmp-check_file
ERROR_CHECK


# nameファイル整形
# レコードに一つも入力がない場合は排除
cat $tmp-name                                         |
fsed 's/_/ /1'                                        |
uawk 'NF=="3"'                                        |
msort key=1                                           |
map num=1                                             |
tateyoko                                              |
tee $tmp-oyako_check |
tagdelr 削除 "true"                                   |
tagdelf "NO" "削除"                                   |
delr 1 "999999"                                       |
cjoin0 +ng key=2/NF $tmp-check_file 2>&1 > /dev/null  |
unmap num=1                                           |
strcat 2+\"_\"+1 3                                    |
cat                                                   > $tmp-check_name
ERROR_CHECK

# エラーファイルの初期化
:> $tmp-error

# 親子関係チェック（店舗コードに紐づく契約がある場合は削除をさせない）
cat $tmp-oyako_check                    |
tagselr 削除 "true"                     |
tagself "会社" "店舗コード" "NO"        |
sed 1d                                  |
#  1:会社 2:店舗コード 3:NO
# 会社、店舗コードいずれかが空のものを除去
delr 1 "_"                              |
delr 2 "_"                              |
msort key=1/2                           |
# 紐づく契約情報があるかチェック
cjoin1 key=2/3 - $lv3d/KEIYAKU/KEIYAKU  |
lineup 4                                |
# 1:NO
cat                                     > $tmp-oyako_error
ERROR_CHECK

if [ -s $tmp-oyako_error ];then
  cat $tmp-oyako_error                         |
  strcat \"削除_\"+1 \"契約情報が存在します\"  |
  cat                                         >> $tmp-error
ERROR_CHECK
fi

if [ -s $tmp-check_name ];then
	
	# 必須項目のチェック
	self 1/NF <<- FIN                                     > $tmp-need
	会社
	業態
	店舗コード
	使用状態
	店舗名
	FIN
	
	check_need_name $tmp-need $tmp-check_name             > $tmp-need_error
	if [ $? -ne 0 ];then
		cat $tmp-need_error                           |
		strcat 1 \"必須項目です\"                     |
		cat                                          >> $tmp-error
	fi
	
	# 日付のチェック
	self 1/NF <<- FIN                                     > $tmp-date
	OPEN日      D
	解約日      D
	閉店日      D
	FIN
	
	# 日付形式をyyyymmddへ変換
	cat $tmp-name                                         |
	fsed 's./..2'                                         |
	check_date_name $tmp-date                             > $tmp-date_error
	if [ $? -ne 0 ];then
		cat $tmp-date_error                           |
		strcat 1 \"日付形式に誤りがあります\"         |
		cat                                          >> $tmp-error
	ERROR_CHECK
	fi
	
	# 店舗コードの重複チェック
	cat $tmp-name                                         |
	# タグ形式へ変換
	name-tag                                              |
	tagself 会社 店舗コード ID NO                         |
	#  1:会社 2:店舗コード 3:ID 4:NO
	# ヘッダー排除
	sed 1d                                                |
	msort key=1/2                                         |
	cat                                                   > $tmp-new_code
	ERROR_CHECK
	
	# LV3とマージし、会社,店舗コードに重複がないかチェック
	#  1:システム店舗NO             2:会社                         3:業態                       4:店舗コード                   5:使用状態                  
	#  6:会計部門コード             7:店舗名                       8:OPEN日                     9:都道府県名                   10:郵便番号                 
	#  11:住所1                     12:住所2                       13:電話番号                  14:契約フォルダ_使用状態       15:契約フォルダ_都道府県    
	#  16:契約フォルダ_店舗コード   17:店舗状態フォルダ_使用状態   18:店舗状態フォルダ_都道府県 19:店舗状態フォルダ_店舗コード 20:店舗履歴フォルダ_使用状態
	#  21:店舗履歴フォルダ_都道府県 22:店舗履歴フォルダ_店舗コード 23:契約形態                  24:店舗タイプ                  25:店舗形態                 
	#  26:売場坪数                  27:摘要                        28:閉店日                    29:解約日                      30:削除F                    
	#  31:更新日時                 
	cat $lv3d/TENPO_MASTER/TENPO_MASTER                   |
	self 2 4 1                                            |
	#  1:会社 2:店舗コード 3:ID
	cat - $tmp-new_code                                   |
	delr 1 "_"                                            |
	delr 2 "_"                                            |
	msort key=1/3                                         |
	getlast key=1/3                                       |
	fpad "_" 4                                            |
	#  1:会社 2:店舗コード 3:ID 4:NO
	yarr num=2                                            |
	uawk 'NF!=4'                                          |
	yarr -2 num=2                                         |
	delr NF "_"                                           |
	cat                                                   > $tmp-jyuhuku_error
	ERROR_CHECK
	
	if [ -s $tmp-jyuhuku_error ];then
		cat $tmp-jyuhuku_error                        |
		strcat \"店舗コード_\"+4 \"コード重複です\"   |
		cat                                          >> $tmp-error
	ERROR_CHECK
	fi
	
fi

if [ -s $tmp-error ];then
	cat $tmp-error    |
	fsed 's/_/ /1'    |
	#  1:項目 2:No 3:エラー内容
	lineup 2          |
	#  1:No
	yarr              |
	tr " " ","        |
	cat - $tmp-error  |
	cat               > $tmp-ajax
ERROR_CHECK
else
	echo -n "ok"      > $tmp-ajax
ERROR_CHECK
fi

##################################################
# 情報送信
echo "Content-type:text/html"
echo
cat $tmp-ajax

#################################################
# 終了処理
rm -rf $tmp-*
exit 0
