#!/usr/bin/bash -vx
#
# KOSHORIREKI.CHECK.AJAX
#
# 交渉履歴 チェック AJAX
#
# 作成者: h-kato@usp-lab.com
# 作成日: 2022/10/20
#
##################################################
# 変数指定
export LANG=ja_JP.UTF-8
export PATH=/home/UTL:/home/TOOL:$PATH

##################################################
# ディレクトリ指定
homd=/home/usp_admin
apld=$homd/APP/KEIYAKU
logd=$homd/LOG
htmd=$apld/HTML
lv3d=$homd/DATA/LV3
comd=$homd/APP/COMMON/HTML
tmp=/tmp/tmp-$$

##################################################
# 走行ログ
logfile=$logd/LOG.$(basename $0).$(date +%Y%m%d%H%M%S)
exec 2> $logfile

##################################################
# エラーチェック
ERROR_CHECK(){
	[ $(plus ${PIPESTATUS[@]}) -eq 0 ] && return
	# エラー表示のhtmlを表示
	echo "Content-type:text/html"
	echo ""
	echo "エラー"
	
	exit 1
}

##################################################
# POSTデータ取得
if [ ! -z "$CONTENT_LENGTH" ];then
	dd bs="$CONTENT_LENGTH"             |
	cgi-name -n_ -s_                    |
	cat                                 > $tmp-name
ERROR_CHECK
else
	:                                   > $tmp-name
ERROR_CHECK
fi

##################################################
# 入力有無チェックファイル作成
echo "_"                                                                   |
ransu 2                                                                    |
yarr                                                                       |
cat                                                                        > $tmp-check_file
ERROR_CHECK

# nameファイル整形
# レコードに一つも入力がない場合は排除
cat $tmp-name                                                  |
name-tag                                                       |
tagself 交渉履歴No 交渉履歴日付 交渉履歴内容 交渉履歴登録日時 交渉履歴削除  |
#  1:交渉履歴No 2:交渉履歴日付 3:交渉履歴内容 4:交渉履歴登録日時 5:交渉履歴削除
# ヘッダー除去
sed 1d                                                         |
# 必須項目、交渉履歴日付がないものは排除
delr 2 "_"                                                     |
# 削除の場合はフラグを1へ
fsed 's/true/1/5' 's/false/0/5'                                |
delr 5 "1"                                                     |
cat                                                            > $tmp-check
ERROR_CHECK

# エラーファイルの初期化
: > $tmp-error

# 重複チェック
#  1:交渉履歴No 2:交渉履歴日付 3:交渉履歴内容 4:交渉履歴登録日時 5:交渉履歴削除
cat $tmp-check  |
msort key=2     |
count key=2     |
#  1:交渉履歴日付 2:重複数
cond '$2 ne 1'  |
cat             > $tmp-chofuku
ERROR_CHECK

if [ -s $tmp-chofuku ]; then
	echo "日付に重複があります。" >> $tmp-error
fi

# 送信ファイルの作成
if [ -s $tmp-error ];then
        cat $tmp-error     > $tmp-ajax
ERROR_CHECK
else
        echo -n "ok"       > $tmp-ajax
ERROR_CHECK
fi

##################################################
# 情報送信
echo "Content-type:text/html"
echo
cat $tmp-ajax

#################################################
# 終了処理
rm -rf $tmp-*
exit 0
